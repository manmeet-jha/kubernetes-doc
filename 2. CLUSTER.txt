What is Cluster?
A Kubernetes (K8s) cluster is a group of computing nodes, or worker machines, that run containerized applications.

#command to create container
kind create cluster -n {cluster_name}

#Simple cluster .yml file
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  extraPortMappings:
  - containerPort: 80
    hostPort: 8081
    protocol: TCP
  - containerPort: 443
    hostPort: 8443
    protocol: TCP
- role: worker
- role: worker
- role: worker



#advance cluster .yml file

kind: Cluster
apiVersion: kind.x-k8s.io/v1beta1

nodes:
- role: control-plane # Designates this node as the control plane
  image: kindest/node:v1.27.3 # Specify the Kubernetes version (adjust as needed)
  kubeadmConfigPatches: # Optional: Apply kubeadm config patches
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true" # Example: Add a node label
  extraMounts: # Optional: Mount volumes into the node
  - hostPath: /path/on/host # Path on the host machine
    containerPath: /path/in/container # Path inside the container
- role: worker # Designates this node as a worker node (optional, at least 1 control plane)
  image: kindest/node:v1.27.3 # Should match control plane version for compatibility
  extraMounts:
  - hostPath: /path/on/host
    containerPath: /path/in/container
- role: worker # Add more worker nodes as needed
  image: kindest/node:v1.27.3
  extraMounts:
  - hostPath: /path/on/host
    containerPath: /path/in/container

# Optional: Configure networking (CNI)
networking:
  disableDefaultCNI: false # Set to true to use a custom CNI

# Optional: Configure container runtime (CRI)
containerdConfigPatches:
- |-
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
    endpoint = ["https://registry-1.docker.io"]

# Optional: Specify a cluster name (defaults to "kind")
name: my-kind-cluster

# Optional: Specify kind version
kindVersion: "v0.20.0" # Example, check latest version

# Optional: Control plane endpoint address
controlPlaneEndpoint:
  host: "127.0.0.1" # Or a specific IP address
  port: 6443 # Default Kubernetes API server port

# Optional: Add labels to the cluster
labels:
  environment: "development"
  purpose: "testing"





#COMMAND FOR CREATING CLUSTER USING YML FILE:
#kind create cluster --config kind-config.yaml --name {your cluster name}
#kubectl get nodes
#kubectl cluster-info

#Deleting the Cluster
#kind delete cluster --name my-kind-cluster




